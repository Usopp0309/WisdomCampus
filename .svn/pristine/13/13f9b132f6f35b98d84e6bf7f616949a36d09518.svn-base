package com.guotop.palmschool.meeting.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import com.google.gson.Gson;
import com.guotop.palmschool.common.service.CommonService;
import com.guotop.palmschool.controller.BaseController;
import com.guotop.palmschool.entity.Permission;
import com.guotop.palmschool.entity.User;
import com.guotop.palmschool.listener.DBContextHolder;
import com.guotop.palmschool.meeting.entity.MeetingInout;
import com.guotop.palmschool.meeting.service.MeetingService;
import com.guotop.palmschool.service.UserService;
import com.guotop.palmschool.util.Pages;

/**
 * 会议刷卡记录控制类
 * 
 * @author zhou
 *
 */
@RequestMapping("/meetingInout")
@Controller
public class MeetingInoutController extends BaseController
{
	@Resource
	private CommonService commonService;

	@Resource
	private MeetingService meetingService;

	@Resource
	private UserService userService;

	/**
	 * 进入进出记录页面
	 */
	@RequestMapping(value = "/toMeetingInout.do")
	public String toMeetingInoutList()
	{
		return "meeting/meeting_inout_list";
	}

	/**
	 * 不同权限查看到不同的page 历史出入记录列表 加载出入记录list 20151209
	 */
	@RequestMapping(value = "/loadMeetingInoutList.do")
	public String loadMeetingInoutList(HttpServletRequest request, HttpServletResponse response, HttpSession session)
	{
		response.setCharacterEncoding("UTF-8");

		/**
		 * 参数map
		 */
		Map<String, Object> paramMap = new HashMap<String, Object>();

		try
		{

			/**
			 * 分页信息
			 */
			Integer currentPage = 1;

			try
			{
				currentPage = Integer.valueOf(request.getParameter("cPage"));
			} catch (Exception e)
			{
				currentPage = 1;
			}

			/**
			 * 进出状态
			 */
			Integer status = 0;
			try
			{
				status = Integer.valueOf(request.getParameter("status"));
			} catch (Exception e)
			{
				status = null;
			}

			// 查询内容
			String queryContent = null;

			try
			{
				queryContent = request.getParameter("queryContent");
			} catch (Exception e)
			{
				queryContent = null;
			}

			// 开始时间
			String startTime = null;
			try
			{
				startTime = request.getParameter("startTime");
			} catch (Exception e)
			{
				startTime = null;
			}

			// 结束时间
			String endTime = null;
			try
			{
				endTime = request.getParameter("endTime");
			} catch (Exception e)
			{
				endTime = null;
			}

			String roleCode = request.getParameter("roleCode");

			User user = (User) session.getAttribute("user");

			paramMap.put("userId", user.getUserId());
			paramMap.put("roleCode", roleCode);
			paramMap.put("status", status);
			paramMap.put("queryContent", queryContent);
			paramMap.put("startTime", startTime);
			paramMap.put("endTime", endTime);

			/**
			 * 获取分页数据
			 */
			this.getPages().setPageSize(50);
			Pages pages = meetingService.getMeetingInoutList(this.getPages().getPageSize(), currentPage, paramMap, user);
			/**
			 * flush到页面
			 */
			Gson gson = new Gson();
			String json = gson.toJson(pages);
			response.getWriter().write(json);
			response.getWriter().flush();
		} catch (Exception e)
		{
			e.printStackTrace();
		}
		return null;
	}

	/* 手机端 begin */

	@RequestMapping(value = "/toMeetingInoutByHuxinId.do")
	public String toMeetingInoutListByHuxinId(HttpServletRequest request, HttpServletResponse response, HttpSession session, ModelMap modelMap)
	{
		response.setCharacterEncoding("UTF-8");

		String apiKey = request.getParameter("apiKey");
		String schoolId = request.getParameter("schoolId");

		String path = null;

		// 这边是利用apikey 进行模拟登录
		User loginUser = userService.getUserByApiKeyAndSchoolId(apiKey, schoolId);

		if (loginUser != null)
		{
			/*
			 * 存session
			 */
			session.setAttribute("user", loginUser);
			
			DBContextHolder.setDBType(loginUser.getSchoolId());

			List<Permission> permissionList = loginUser.getPermissionList();
			for (Permission permission : permissionList)
			{
				if ("meetingInoutManager".equals(permission.getPermissionCode()) || "admin".equals(permission.getPermissionCode()))
				{
					path = "app/meeting/meeting_inout_list_app";
					break;
				}
			}

			/**
			 * 参数map
			 */
			Map<String, Object> paramMap = new HashMap<String, Object>();

			try
			{

				/**
				 * 分页信息
				 */
				Integer currentPage = 1;

				try
				{
					currentPage = Integer.valueOf(request.getParameter("cPage"));
				} catch (Exception e)
				{
					currentPage = 1;
				}

				/**
				 * 进出状态
				 */
				Integer status = 0;
				try
				{
					status = Integer.valueOf(request.getParameter("status"));
				} catch (Exception e)
				{
					status = null;
				}

				// 查询内容
				String queryContent = null;

				try
				{
					queryContent = request.getParameter("queryContent");
				} catch (Exception e)
				{
					queryContent = null;
				}

				// 开始日期
				String startDate = null;
				// 开始时间
				String startTime = null;
				String start = null;
				try
				{
					startDate = request.getParameter("startDate");
					startTime = request.getParameter("startTime");
					if (startDate == null || startDate.equals(""))
					{

					} else
					{
						start = startDate + " " + startTime + ":00";
					}
				} catch (Exception e)
				{
					startTime = null;
				}

				// 结束日期
				String endDate = null;
				// 结束时间
				String endTime = null;
				String end = null;
				try
				{
					endDate = request.getParameter("endDate");
					endTime = request.getParameter("endTime");
					if (endDate == null || endDate.equals(""))
					{
					} else
					{
						end = endDate + " " + endTime + ":00";
					}
				} catch (Exception e)
				{
					endTime = null;
					endDate = null;
				}

				String roleCode = request.getParameter("roleCode");

				User user = (User) session.getAttribute("user");

				paramMap.put("userId", user.getUserId());
				paramMap.put("roleCode", roleCode);
				paramMap.put("status", status);
				paramMap.put("queryContent", queryContent);
				paramMap.put("startTime", start);
				paramMap.put("endTime", end);

				/**
				 * 获取分页数据
				 */
				this.getPages().setPageSize(20);
				List<MeetingInout> list = meetingService.getMeetingInoutListAPP(this.getPages().getPageSize(), currentPage, paramMap, user);

				currentPage = currentPage + 1;
				modelMap.addAttribute("roleList", loginUser.getRoleList());
				modelMap.addAttribute("roleListSize", loginUser.getRoleList().size());
				modelMap.addAttribute("meetingList", list);
				modelMap.addAttribute("listSize", list.size());
				modelMap.addAttribute("roleCode", roleCode);
				modelMap.addAttribute("cPage", currentPage);
				modelMap.addAttribute("status", status);
				modelMap.addAttribute("queryContent", queryContent);
				modelMap.addAttribute("startDate", startDate);
				modelMap.addAttribute("startTime", startTime);
				modelMap.addAttribute("endDate", endDate);
				modelMap.addAttribute("endTime", endTime);

			} catch (Exception e)
			{
				e.printStackTrace();
			}

			modelMap.addAttribute("apiKeyTimeOut", "2");
		} else
		{
			modelMap.addAttribute("apiKeyTimeOut", "1");
			return "app/meeting/meeting_inout_list_app";
		}

		modelMap.addAttribute("schoolId", schoolId);
		modelMap.addAttribute("apiKey", apiKey);

		return path;
	}

	/**
	 * 不同权限查看到不同的page 历史出入记录列表 加载出入记录list 20151209
	 */
	@RequestMapping(value = "/loadMoreMeetingInoutListAPP.do")
	public String loadMoreMeetingInoutListAPP(HttpServletRequest request, HttpServletResponse response, HttpSession session, ModelMap modelMap)
	{
		response.setCharacterEncoding("UTF-8");

		/**
		 * 参数map
		 */
		Map<String, Object> paramMap = new HashMap<String, Object>();

		try
		{
			String apiKey = request.getParameter("apiKey");
			String schoolId = request.getParameter("schoolId");

			/**
			 * 分页信息
			 */
			Integer currentPage = 1;

			try
			{
				currentPage = Integer.valueOf(request.getParameter("cPage"));
			} catch (Exception e)
			{
				currentPage = 1;
			}

			/**
			 * 进出状态
			 */
			Integer status = 0;
			try
			{
				status = Integer.valueOf(request.getParameter("status"));
			} catch (Exception e)
			{
				status = null;
			}

			// 查询内容
			String queryContent = null;

			try
			{
				queryContent = request.getParameter("queryContent");
			} catch (Exception e)
			{
				queryContent = null;
			}

			// 开始日期
			String startDate = null;
			// 开始时间
			String startTime = null;
			String start = null;
			try
			{
				startDate = request.getParameter("startDate");
				startTime = request.getParameter("startTime");
				if (startDate == null || startDate.equals(""))
				{

				} else
				{
					start = startDate + " " + startTime + ":00";
				}
			} catch (Exception e)
			{
				startTime = null;
			}

			// 结束日期
			String endDate = null;
			// 结束时间
			String endTime = null;
			String end = null;
			try
			{
				endDate = request.getParameter("endDate");
				endTime = request.getParameter("endTime");
				if (endDate == null || endDate.equals(""))
				{
				} else
				{
					end = endDate + " " + endTime + ":00";
				}
			} catch (Exception e)
			{
				endTime = null;
				endDate = null;
			}

			String roleCode = request.getParameter("roleCode");

			User user = (User) session.getAttribute("user");

			paramMap.put("userId", user.getUserId());
			paramMap.put("roleCode", roleCode);
			paramMap.put("status", status);
			paramMap.put("queryContent", queryContent);
			paramMap.put("startTime", start);
			paramMap.put("endTime", end);

			/**
			 * 获取分页数据
			 */
			List<MeetingInout> list = meetingService.getMeetingInoutListAPP(this.getPages().getPageSize(), currentPage, paramMap, user);
			
			currentPage = currentPage + 1;

			modelMap.addAttribute("schoolId", schoolId);
			modelMap.addAttribute("apiKey", apiKey);
			modelMap.addAttribute("cPage", currentPage);
			modelMap.addAttribute("status", status);
			modelMap.addAttribute("queryContent", queryContent);
			modelMap.addAttribute("startDate", startDate);
			modelMap.addAttribute("startTime", startTime);
			modelMap.addAttribute("endDate", endDate);
			modelMap.addAttribute("endTime", endTime);
			modelMap.addAttribute("meetingList", list);
			modelMap.addAttribute("listSize", list.size());
			modelMap.addAttribute("roleCode", roleCode);

			Gson gson = new Gson();
			String json = gson.toJson(modelMap);
			response.getWriter().write(json);
			response.getWriter().flush();
		} catch (Exception e)
		{
			e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * 进入宿舍异常搜索页面
	 * @param request
	 * @param response
	 * @param session
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/toMeetingInoutSearchAPP.do")
	public String toMeetingInoutSearchAPP(HttpServletRequest request, HttpServletResponse response, HttpSession session, ModelMap modelMap)
	{
		String apiKey = request.getParameter("apiKey");
		String schoolId = request.getParameter("schoolId");
		String roleCode = request.getParameter("roleCode");

		User user = (User) session.getAttribute("user");
		
		modelMap.addAttribute("roleCode", roleCode);
		modelMap.addAttribute("apiKey", apiKey);
		modelMap.addAttribute("schoolId", schoolId);
		modelMap.addAttribute("userId", user.getUserId());

		return "app/meeting/meeting_inout_list_search_app";
	}
}
