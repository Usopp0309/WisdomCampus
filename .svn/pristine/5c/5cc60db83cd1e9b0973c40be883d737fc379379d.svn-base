<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="   
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd  
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 不仅扫描controller 扫描Service , Repository注解-->
    <context:component-scan base-package="com.guotop.palmschool">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 数据源配置 -->
    
    <!-- 读入属性文件 -->
	<bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/properties/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置数据源 -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${jdbc.driverClassName}" /> -->
<!-- 		<property name="url" value="${jdbc.url}" /> -->
<!-- 		<property name="username" value="${jdbc.username}" /> -->
<!-- 		<property name="password" value="${jdbc.password}" /> -->
 		<!-- 连接初始值，连接池启动时创建的连接数量的初始值 -->
<!-- 		<property name="initialSize" value="${jdbc.initialSize}" /> -->
 		<!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制 -->
<!-- 		<property name="maxActive" value="${jdbc.maxActive}" /> -->
 		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 ，0时无限制-->
<!-- 		<property name="maxIdle" value="${jdbc.maxIdle}" /> -->
 		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
<!-- 		<property name="minIdle" value="${jdbc.minIdle}" /> -->
 		<!-- 是否对已备语句进行池管理（布尔值），是否对PreparedStatement进行缓存 -->
<!-- 		<property name="poolPreparedStatements" value="true" /> -->
		
<!-- 	</bean> -->
	
	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
	    <!-- 指定配置装载的目录  -->
	    <property name="dir" value="META-INF/druid/wall/mysql" />
	</bean>
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
	    <property name="dbType" value="mysql" />
	    <property name="config" ref="wall-filter-config" />
	</bean>
 	<!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}"/>
		<!-- 数据库基本信息配置 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${ds.initialSize}"/>
        <property name="minIdle" value="${ds.minIdle}"/>
        <property name="maxActive" value="${ds.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 单位毫秒-->
        <property name="maxWait" value="${ds.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>   	 	
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
<!--         <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/> -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" /> 
		<property name="proxyFilters">
		    <list>
		        <ref bean="wall-filter"/>
		    </list>
		</property>
    </bean>
    
    <!-- 动态配置数据源 -->
	<bean id="dynamicDataSource" class="com.guotop.palmschool.listener.DynamicDataSource">
		<property name="targetDataSources">
			<map></map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource"></property>
	</bean>
    
   <!-- Spring iBatis SqlMapClient -->
   <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
       <property name="configLocation" value="WEB-INF/config/dataBaseConfig.xml"/>
       <property name="dataSource" ref="dynamicDataSource"/>
    </bean>

    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dynamicDataSource" />
        </property>
    </bean>
    
    <!-- controller -->
<!--     <bean id="teacherImportController" class="com.guotop.palmschool.imp.controller.TeacherImportController" autowire="byName" /> -->
<!--     <bean id="studentImportController" class="com.guotop.palmschool.imp.controller.StudentImportController" autowire="byName" /> -->
<!--     <bean id="scoreSendingController" class="com.guotop.palmschool.imp.controller.ScoreSendingController" autowire="byName" /> -->
    
    <!-- service -->
<!--     <bean id="commonService" class="com.guotop.palmschool.common.service.impl.CommonServiceImpl" autowire="byName" /> -->
<!--     <bean id="inoutService" class="com.guotop.palmschool.service.impl.InoutServiceImpl" autowire="byName" /> -->
<!--     <bean id="userService" class="com.guotop.palmschool.service.impl.UserServiceImpl" autowire="byName" /> -->
<!--     <bean id="importService" class="com.guotop.palmschool.system.service.impl.ImportServiceImpl" autowire="byName" /> -->
    
    <!-- 使用基于注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
    <aop:aspectj-autoproxy />
    
    <!-- 线程池配置 -->
    <!-- corePoolSize： 线程池维护线程的最少数量  
    	keepAliveSeconds 线程池维护线程所允许的空闲时间 
		maxPoolSize 线程池维护线程的最大数量 
		queueCapacity 线程池所使用的缓冲队列 -->
    <bean id="poolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
	    <property name ="corePoolSize" value ="15" />
	    <property name ="keepAliveSeconds" value ="3000" />
	    <property name ="maxPoolSize" value ="50" />
	    <property name ="queueCapacity" value ="100" />
  	</bean>
    
    <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->  
	<cache:annotation-driven cache-manager="cacheManager"/>  
	  
	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->  
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	    <!-- 定义缓存集合caches -->
	    <property name="caches">
	        <set>
	           <!-- ConcurrentMapCacheFactoryBean为spring提供的内存存储工厂类，定义了两个名称. -->
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default" />
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="menuCache" /> 
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="menuCacheForSysadmin" />
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="allPermisionCache" /> 
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="taskSubjectCache" /> 
	           <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="allStudentCache" />
	           
	        </set>
	    </property>
	</bean>
</beans>
